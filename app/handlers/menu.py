from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext

from app.db.crud import get_menu_items
from app.utils.clear import track_message, clear_tracked_messages

router = Router(name="menu")

def back_to_main_menu_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥' –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main_options")]
    ])


@router.callback_query(F.data == "cat_menu")
async def menu_callback(callback: CallbackQuery, state: FSMContext, bot: Bot):
    # 1. –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await clear_tracked_messages(state, bot, callback.from_user.id)
    await callback.answer()

    items = await get_menu_items()
    
    # 2. –°–æ–±–∏—Ä–∞–µ–º –≤—Å—ë –º–µ–Ω—é –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not items:
        text = "üìã –ú–µ–Ω—é –ø–æ–∫–∞ –ø—É—Å—Ç–æ–µ."
    else:
        text = "<b>üìã –ù–∞—à–µ –º–µ–Ω—é:</b>\n\n"
        for item in items:
            # –ò–°–ü–û–õ–¨–ó–£–ï–ú BLOCKQUOTE –î–õ–Ø –û–ü–ò–°–ê–ù–ò–Ø
            text += f"<b>{item.title} ‚Äî {item.price}‚ÇΩ</b>\n"
            text += f"<blockquote>{item.description}</blockquote>\n\n" # <-- –í–û–¢ –û–ù–û, –ï–ü–¢–ê
    
    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    sent_message = await bot.send_message(
        chat_id=callback.from_user.id,
        text=text,
        reply_markup=back_to_main_menu_kb(),
        parse_mode="HTML"
    )
        
    # 4. –ù–∞—á–∏–Ω–∞–µ–º –µ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å
    await track_message(state, sent_message)