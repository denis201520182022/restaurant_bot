# app/scheduler.py

import logging
from datetime import datetime, timedelta
import pytz
from aiogram import Bot

from app.db.crud import get_upcoming_bookings, get_upcoming_preorders

async def check_reminders(bot: Bot):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    """
    # –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å UTC, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Å—è —Å–∏—Å—Ç–µ–º–∞
    utc_tz = pytz.UTC
    # –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú–æ—Å–∫–≤–∞). –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ.
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ—è—Å–æ–≤: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    user_tz = pytz.timezone("Europe/Moscow")

    now_utc = datetime.now(utc_tz)

    # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–æ–Ω–µ–π (–∑–∞ 1.5 —á–∞—Å–∞ = 90 –º–∏–Ω—É—Ç) ---
    booking_start_time = now_utc + timedelta(minutes=90)
    booking_end_time = booking_start_time + timedelta(minutes=1)
    
    upcoming_bookings = await get_upcoming_bookings(booking_start_time, booking_end_time)
    for booking in upcoming_bookings:
        user_tg_id = booking.user.tg_id
        
        # –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í–†–ï–ú–ï–ù–ò –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
        booking_time_local = booking.datetime.astimezone(user_tz)
        
        text = (
            f"üîî <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –±—Ä–æ–Ω–∏!</b>\n\n"
            f"–í—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ —Å—Ç–æ–ª–∏–∫ ‚Ññ{booking.table_number} –Ω–∞ "
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            f"<b>{booking_time_local.strftime('%d.%m.%Y –≤ %H:%M')}</b>.\n\n"
            f"–ñ–¥—ë–º –≤–∞—Å!"
        )
        try:
            await bot.send_message(chat_id=user_tg_id, text=text, parse_mode="HTML")
            logging.info(f"Sent booking reminder to {user_tg_id}")
        except Exception as e:
            logging.error(f"Failed to send booking reminder to {user_tg_id}: {e}")

    # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–∑–∞–∫–∞–∑–æ–≤ (–∑–∞ 30 –º–∏–Ω—É—Ç) ---
    preorder_start_time = now_utc + timedelta(minutes=30)
    preorder_end_time = preorder_start_time + timedelta(minutes=1)

    upcoming_preorders = await get_upcoming_preorders(preorder_start_time, preorder_end_time)
    for preorder in upcoming_preorders:
        user_tg_id = preorder.user.tg_id

        # –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í–†–ï–ú–ï–ù–ò –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
        preorder_time_local = preorder.ready_at.astimezone(user_tz)

        text = (
            f"üîî <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–µ–¥–∑–∞–∫–∞–∑–µ!</b>\n\n"
            f"–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ '{preorder.item.title}' ({preorder.quantity} —à—Ç.) "
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            f"–±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç –≤ <b>{preorder_time_local.strftime('%H:%M')}</b>.\n\n"
            f"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!"
        )
        try:
            await bot.send_message(chat_id=user_tg_id, text=text, parse_mode="HTML")
            logging.info(f"Sent preorder reminder to {user_tg_id}")
        except Exception as e:
            logging.error(f"Failed to send preorder reminder to {user_tg_id}: {e}")